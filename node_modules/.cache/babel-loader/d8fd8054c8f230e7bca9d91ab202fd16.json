{"ast":null,"code":"var _jsxFileName = \"A:\\\\online_kaam\\\\1LearningResource\\\\React Practice\\\\pixabay_app\\\\src\\\\Components\\\\image-results\\\\ImageResults.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridList, GridTile } from \"material-ui/GridList\";\nimport IconButton from \"material-ui/IconButton\";\nimport ZoomIn from \"material-ui/svg-icons/action/zoom-in\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\n\nclass ImageResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      currentImg: \"\"\n    };\n\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    let imageListContent;\n    const {\n      images\n    } = this.props;\n\n    if (images) {\n      imageListContent = /*#__PURE__*/React.createElement(GridList, {\n        cols: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, images.map(img => /*#__PURE__*/React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, \"by \", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }\n        }, img.user)),\n        actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n          onClick: () => this.handleOpen(img.largeImageURL),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ZoomIn, {\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    const actions = [/*#__PURE__*/React.createElement(FlatButton, {\n      label: \"Close\",\n      primary: true,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    })];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, imageListContent, /*#__PURE__*/React.createElement(Dialog, {\n      actions: actions,\n      modal: false,\n      open: this.state.open,\n      onRequestClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.currentImg,\n      alt: \"\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["A:/online_kaam/1LearningResource/React Practice/pixabay_app/src/Components/image-results/ImageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","render","imageListContent","images","props","map","tags","id","user","largeImageURL","actions","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridList, GridTile } from \"material-ui/GridList\";\r\nimport IconButton from \"material-ui/IconButton\";\r\nimport ZoomIn from \"material-ui/svg-icons/action/zoom-in\";\r\nimport Dialog from \"material-ui/Dialog\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\n\r\nclass ImageResults extends Component {\r\n  state = {\r\n    open: false,\r\n    currentImg: \"\"\r\n  };\r\n\r\n  handleOpen = img => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let imageListContent;\r\n    const { images } = this.props;\r\n\r\n    if (images) {\r\n      imageListContent = (\r\n        <GridList cols={3}>\r\n          {images.map(img => (\r\n            <GridTile\r\n              title={img.tags}\r\n              key={img.id}\r\n              subtitle={\r\n                <span>\r\n                  by <strong>{img.user}</strong>\r\n                </span>\r\n              }\r\n              actionIcon={\r\n                <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                  <ZoomIn color=\"white\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              <img src={img.largeImageURL} alt=\"\" />\r\n            </GridTile>\r\n          ))}\r\n        </GridList>\r\n      );\r\n    } else {\r\n      imageListContent = null;\r\n    }\r\n\r\n    const actions = [\r\n      <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        {imageListContent}\r\n        <Dialog\r\n          actions={actions}\r\n          modal={false}\r\n          open={this.state.open}\r\n          onRequestClose={this.handleClose}\r\n        >\r\n          <img src={this.state.currentImg} alt=\"\" style={{ width: \"100%\" }} />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageResults;\r\n"]},"metadata":{},"sourceType":"module"}