{"ast":null,"code":"import _classCallCheck from\"A:\\\\online_kaam\\\\1LearningResource\\\\React Practice\\\\pixabay_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"A:\\\\online_kaam\\\\1LearningResource\\\\React Practice\\\\pixabay_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"A:\\\\online_kaam\\\\1LearningResource\\\\React Practice\\\\pixabay_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"A:\\\\online_kaam\\\\1LearningResource\\\\React Practice\\\\pixabay_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{GridList,GridTile}from\"material-ui/GridList\";import IconButton from\"material-ui/IconButton\";import ZoomIn from\"material-ui/svg-icons/action/zoom-in\";import Dialog from\"material-ui/Dialog\";import FlatButton from\"material-ui/FlatButton\";var ImageResults=/*#__PURE__*/function(_Component){_inherits(ImageResults,_Component);var _super=_createSuper(ImageResults);function ImageResults(){var _this;_classCallCheck(this,ImageResults);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={open:false,currentImg:\"\"};_this.handleOpen=function(img){_this.setState({open:true,currentImg:img});};_this.handleClose=function(){_this.setState({open:false});};return _this;}_createClass(ImageResults,[{key:\"render\",value:function render(){var _this2=this;var imageListContent;var images=this.props.images;if(images){imageListContent=/*#__PURE__*/React.createElement(GridList,{cols:3},images.map(function(img){return/*#__PURE__*/React.createElement(GridTile,{title:img.tags,key:img.id,subtitle:/*#__PURE__*/React.createElement(\"span\",null,\"by \",/*#__PURE__*/React.createElement(\"strong\",null,img.user)),actionIcon:/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return _this2.handleOpen(img.largeImageURL);}},/*#__PURE__*/React.createElement(ZoomIn,{color:\"white\"}))},/*#__PURE__*/React.createElement(\"img\",{src:img.largeImageURL,alt:\"\"}));}));}else{imageListContent=null;}var actions=[/*#__PURE__*/React.createElement(FlatButton,{label:\"Close\",primary:true,onClick:this.handleClose})];return/*#__PURE__*/React.createElement(\"div\",null,imageListContent,/*#__PURE__*/React.createElement(Dialog,{actions:actions,modal:false,open:this.state.open,onRequestClose:this.handleClose},/*#__PURE__*/React.createElement(\"img\",{src:this.state.currentImg,alt:\"\",style:{width:\"100%\"}})));}}]);return ImageResults;}(Component);export default ImageResults;","map":{"version":3,"sources":["A:/online_kaam/1LearningResource/React Practice/pixabay_app/src/Components/image-results/ImageResults.js"],"names":["React","Component","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","props","map","tags","id","user","largeImageURL","actions","width"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,sBAAnC,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sCAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,C,GAEMC,CAAAA,Y,mVACJC,K,CAAQ,CACNC,IAAI,CAAE,KADA,CAENC,UAAU,CAAE,EAFN,C,OAKRC,U,CAAa,SAAAC,GAAG,CAAI,CAClB,MAAKC,QAAL,CAAc,CAAEJ,IAAI,CAAE,IAAR,CAAcC,UAAU,CAAEE,GAA1B,CAAd,EACD,C,OAEDE,W,CAAc,UAAM,CAClB,MAAKD,QAAL,CAAc,CAAEJ,IAAI,CAAE,KAAR,CAAd,EACD,C,+EAEQ,iBACP,GAAIM,CAAAA,gBAAJ,CADO,GAECC,CAAAA,MAFD,CAEY,KAAKC,KAFjB,CAECD,MAFD,CAIP,GAAIA,MAAJ,CAAY,CACVD,gBAAgB,cACd,oBAAC,QAAD,EAAU,IAAI,CAAE,CAAhB,EACGC,MAAM,CAACE,GAAP,CAAW,SAAAN,GAAG,qBACb,oBAAC,QAAD,EACE,KAAK,CAAEA,GAAG,CAACO,IADb,CAEE,GAAG,CAAEP,GAAG,CAACQ,EAFX,CAGE,QAAQ,cACN,mDACK,kCAASR,GAAG,CAACS,IAAb,CADL,CAJJ,CAQE,UAAU,cACR,oBAAC,UAAD,EAAY,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACV,UAAL,CAAgBC,GAAG,CAACU,aAApB,CAAN,EAArB,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,OAAd,EADF,CATJ,eAcE,2BAAK,GAAG,CAAEV,GAAG,CAACU,aAAd,CAA6B,GAAG,CAAC,EAAjC,EAdF,CADa,EAAd,CADH,CADF,CAsBD,CAvBD,IAuBO,CACLP,gBAAgB,CAAG,IAAnB,CACD,CAED,GAAMQ,CAAAA,OAAO,CAAG,cACd,oBAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,CAA0B,OAAO,CAAE,IAAnC,CAAyC,OAAO,CAAE,KAAKT,WAAvD,EADc,CAAhB,CAIA,mBACE,+BACGC,gBADH,cAEE,oBAAC,MAAD,EACE,OAAO,CAAEQ,OADX,CAEE,KAAK,CAAE,KAFT,CAGE,IAAI,CAAE,KAAKf,KAAL,CAAWC,IAHnB,CAIE,cAAc,CAAE,KAAKK,WAJvB,eAME,2BAAK,GAAG,CAAE,KAAKN,KAAL,CAAWE,UAArB,CAAiC,GAAG,CAAC,EAArC,CAAwC,KAAK,CAAE,CAAEc,KAAK,CAAE,MAAT,CAA/C,EANF,CAFF,CADF,CAaD,C,0BA9DwBxB,S,EAqE3B,cAAeO,CAAAA,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridList, GridTile } from \"material-ui/GridList\";\r\nimport IconButton from \"material-ui/IconButton\";\r\nimport ZoomIn from \"material-ui/svg-icons/action/zoom-in\";\r\nimport Dialog from \"material-ui/Dialog\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\n\r\nclass ImageResults extends Component {\r\n  state = {\r\n    open: false,\r\n    currentImg: \"\"\r\n  };\r\n\r\n  handleOpen = img => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let imageListContent;\r\n    const { images } = this.props;\r\n\r\n    if (images) {\r\n      imageListContent = (\r\n        <GridList cols={3}>\r\n          {images.map(img => (\r\n            <GridTile\r\n              title={img.tags}\r\n              key={img.id}\r\n              subtitle={\r\n                <span>\r\n                  by <strong>{img.user}</strong>\r\n                </span>\r\n              }\r\n              actionIcon={\r\n                <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                  <ZoomIn color=\"white\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              <img src={img.largeImageURL} alt=\"\" />\r\n            </GridTile>\r\n          ))}\r\n        </GridList>\r\n      );\r\n    } else {\r\n      imageListContent = null;\r\n    }\r\n\r\n    const actions = [\r\n      <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        {imageListContent}\r\n        <Dialog\r\n          actions={actions}\r\n          modal={false}\r\n          open={this.state.open}\r\n          onRequestClose={this.handleClose}\r\n        >\r\n          <img src={this.state.currentImg} alt=\"\" style={{ width: \"100%\" }} />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageResults;\r\n"]},"metadata":{},"sourceType":"module"}